{"version":3,"sources":["components/Welcome/Welcome.js","components/QuizPage/QuizPage.js","components/App.js","index.js"],"names":["Welcome","className","to","class","QuizPage","useState","displayData","setDisplayData","correctIndices","setCorrectIndices","showResultBtn","setShowResultBtn","showQuestions","setShowQuestions","numberOfCorrect","setNumberOfCorrect","numberOfAtt","setNumberOfAtt","numCorrect","attempted","userIndices","ques1","setQues1","ques2","setQues2","ques3","setQues3","ques4","setQues4","ques5","setQues5","ques6","setQues6","ques7","setQues7","ques8","setQues8","ques9","setQues9","ques10","setQues10","useEffect","getData","url","a","fetch","response","json","results","forEach","result","index","ques","atob","question","correct_ans","correct_answer","incorrect_ans","incorrect_answers","properIncorrectAns","i","length","push","options","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","prevIndex","indexOf","partToBePut","correct_index","questionNumber","prevData","handleChange","e","optionNumber","parentId","target","parentNode","id","parentClass","setOptions","map","eachDisplayData","name","type","onChange","htmlFor","onClick","preventDefault","userArray","correctArray","giveResults","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f054945.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Welcome.css\";\r\n\r\nexport default function Welcome() {\r\n  return (\r\n    <div className=\"welcome-main-div\">\r\n      <h1 className=\"welcome-heading\">Are you ready for the quiz?</h1>\r\n      <Link to=\"/quiz\" class=\"welcome-link\">\r\n        Start now!\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./QuizPage.css\";\r\n\r\nexport default function QuizPage() {\r\n  //displayData is an array of objects\r\n  //Each object has a question, array of options, correct answer & question number\r\n  const [displayData, setDisplayData] = useState([]);\r\n  const [correctIndices, setCorrectIndices] = useState([]);\r\n  const [showResultBtn, setShowResultBtn] = useState(false);\r\n  const [showQuestions, setShowQuestions] = useState(true);\r\n  const [numberOfCorrect, setNumberOfCorrect] = useState(0);\r\n  const [numberOfAtt, setNumberOfAtt] = useState(0);\r\n\r\n  let propToResults;\r\n  let numCorrect = 0;\r\n  let attempted = 0;\r\n  let userIndices = [];\r\n  const [ques1, setQues1] = useState(5);\r\n  const [ques2, setQues2] = useState(5);\r\n  const [ques3, setQues3] = useState(5);\r\n  const [ques4, setQues4] = useState(5);\r\n  const [ques5, setQues5] = useState(5);\r\n  const [ques6, setQues6] = useState(5);\r\n  const [ques7, setQues7] = useState(5);\r\n  const [ques8, setQues8] = useState(5);\r\n  const [ques9, setQues9] = useState(5);\r\n  const [ques10, setQues10] = useState(5);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const url =\r\n    \"https://opentdb.com/api.php?amount=10&type=multiple&encode=base64\";\r\n\r\n  async function getData() {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    data.results.forEach((result, index) => {\r\n      let ques = atob(result.question);\r\n      let correct_ans = atob(result.correct_answer);\r\n      let incorrect_ans = result.incorrect_answers;\r\n      let properIncorrectAns = []; //Stores incorrect answers which are properly encoded\r\n      for (let i = 0; i < incorrect_ans.length; i++) {\r\n        properIncorrectAns.push(atob(incorrect_ans[i]));\r\n      }\r\n      //This function is to shuffle the options array\r\n      function shuffle(array) {\r\n        var currentIndex = array.length,\r\n          temporaryValue,\r\n          randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n\r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n      }\r\n      const options = shuffle([correct_ans, ...properIncorrectAns]);\r\n\r\n      setCorrectIndices((prevIndex) => {\r\n        return [...prevIndex, options.indexOf(correct_ans)];\r\n      });\r\n\r\n      //This is an object with question, array of options and correct answer\r\n      let partToBePut = {\r\n        question: ques,\r\n        options: options,\r\n        correct_answer: correct_ans,\r\n        correct_index: options.indexOf(correct_ans),\r\n        questionNumber: index + 1,\r\n      };\r\n      // console.log(partToBePut);\r\n\r\n      setDisplayData((prevData) => {\r\n        return [...prevData, partToBePut];\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleChange(e) {\r\n    const parentId = e.target.parentNode.id;\r\n    const parentClass = e.target.parentNode.className;\r\n\r\n    let optionNumber;\r\n    if (parentClass === \"option1-div\") {\r\n      optionNumber = 0;\r\n      setOptions();\r\n    } else if (parentClass === \"option2-div\") {\r\n      optionNumber = 1;\r\n      setOptions();\r\n    } else if (parentClass === \"option3-div\") {\r\n      optionNumber = 2;\r\n      setOptions();\r\n    } else if (parentClass === \"option4-div\") {\r\n      optionNumber = 3;\r\n      setOptions();\r\n    }\r\n\r\n    function setOptions() {\r\n      if (parentId === \"1\") {\r\n        setQues1(optionNumber);\r\n      } else if (parentId === \"2\") {\r\n        setQues2(optionNumber);\r\n      } else if (parentId === \"3\") {\r\n        setQues3(optionNumber);\r\n      } else if (parentId === \"4\") {\r\n        setQues4(optionNumber);\r\n      } else if (parentId === \"5\") {\r\n        setQues5(optionNumber);\r\n      } else if (parentId === \"6\") {\r\n        setQues6(optionNumber);\r\n      } else if (parentId === \"7\") {\r\n        setQues7(optionNumber);\r\n      } else if (parentId === \"8\") {\r\n        setQues8(optionNumber);\r\n      } else if (parentId === \"9\") {\r\n        setQues9(optionNumber);\r\n      } else if (parentId === \"10\") {\r\n        setQues10(optionNumber);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    userIndices.push(ques1);\r\n    userIndices.push(ques2);\r\n    userIndices.push(ques3);\r\n    userIndices.push(ques4);\r\n    userIndices.push(ques5);\r\n    userIndices.push(ques6);\r\n    userIndices.push(ques7);\r\n    userIndices.push(ques8);\r\n    userIndices.push(ques9);\r\n    userIndices.push(ques10);\r\n    giveResults(userIndices, correctIndices);\r\n    setShowResultBtn(true);\r\n    setShowQuestions(false);\r\n  }\r\n\r\n  function giveResults(userArray, correctArray) {\r\n    for (let i = 0; i < userArray.length; i++) {\r\n      if (userArray[i] === correctArray[i]) {\r\n        numCorrect += 1;\r\n      }\r\n      if (userArray[i] !== 5) {\r\n        attempted += 1;\r\n      }\r\n    }\r\n    setNumberOfCorrect(numCorrect);\r\n    setNumberOfAtt(attempted);\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-page-main-div\">\r\n      {showQuestions === true ? (\r\n        <div>\r\n          {displayData.map((eachDisplayData) => {\r\n            return (\r\n              <div className=\"card\">\r\n                <h3 className=\"question\">{eachDisplayData.question}</h3>\r\n                <form className=\"options-form\">\r\n                  <div\r\n                    className=\"option1-div\"\r\n                    id={eachDisplayData.questionNumber}\r\n                  >\r\n                    <input\r\n                      name=\"op-radio-btn\"\r\n                      className=\"check-input\"\r\n                      type=\"radio\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"option1\">\r\n                      {eachDisplayData.options[0]}\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"option2-div\"\r\n                    id={eachDisplayData.questionNumber}\r\n                  >\r\n                    <input\r\n                      name=\"op-radio-btn\"\r\n                      className=\"check-input\"\r\n                      type=\"radio\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"option2\">\r\n                      {eachDisplayData.options[1]}\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"option3-div\"\r\n                    id={eachDisplayData.questionNumber}\r\n                  >\r\n                    <input\r\n                      name=\"op-radio-btn\"\r\n                      className=\"check-input\"\r\n                      type=\"radio\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"option3\">\r\n                      {eachDisplayData.options[2]}\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"option4-div\"\r\n                    id={eachDisplayData.questionNumber}\r\n                  >\r\n                    <input\r\n                      name=\"op-radio-btn\"\r\n                      className=\"check-input\"\r\n                      type=\"radio\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <label htmlFor=\"option4\">\r\n                      {eachDisplayData.options[3]}\r\n                    </label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"submit-btn-div\">\r\n            <button\r\n              className=\"quiz-submit-btn\"\r\n              type=\"submit\"\r\n              onClick={handleClick}\r\n            >\r\n              Submit quiz\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {showResultBtn === true ? (\r\n        <div className=\"results-div\">\r\n          <h1 className=\"results\">\r\n            You attempted <span className=\"resultNum\">{numberOfAtt}</span> of\r\n            the 10 questions, out of which you got{\" \"}\r\n            <span className=\"resultNum\">{numberOfCorrect}</span> question(s)\r\n            right!\r\n          </h1>\r\n          <Link to=\"/\">\r\n            <button className=\"quiz-submit-btn\" type=\"button\">\r\n              Take another quiz\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Welcome from \"./Welcome/Welcome\";\r\nimport QuizPage from \"./QuizPage/QuizPage\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Welcome} />\r\n      <Route path=\"/quiz\" exact component={QuizPage} />\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}